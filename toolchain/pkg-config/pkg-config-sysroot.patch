diff -rup a/configure b/configure
--- a/configure	2013-01-23 14:56:44.000000000 +0100
+++ b/configure	2016-04-20 16:09:07.380157755 +0200
@@ -657,6 +657,8 @@ use_indirect_deps
 system_library_path
 system_include_path
 pc_path
+pc_sysroot
+pc_instdir
 TESTS_SHELL
 LN
 AM_BACKSLASH
@@ -784,6 +786,8 @@ with_sysroot
 enable_libtool_lock
 enable_silent_rules
 with_pc_path
+with_pc_sysroot
+with_pc_instdir
 with_system_include_path
 with_system_library_path
 enable_indirect_deps
@@ -1450,6 +1454,9 @@ Optional Packages:
   --with-sysroot=DIR Search for dependent libraries within DIR
                         (or the compiler's sysroot if not specified).
   --with-pc-path          default search path for .pc files
+  --with-pc-sysroot       default sysroot path for .pc files
+  --with-pc-instdir       default install directory for .pc (usefull for movable
+.pc)
   --with-system-include-path
                           avoid -I flags from the given path
   --with-system-library-path
@@ -12179,6 +12186,25 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $pc_path" >&5
 $as_echo "$pc_path" >&6; }
 
+# Check whether --with-pc_sysroot was given.
+if test "${with_pc_sysroot+set}" = set; then :
+  withval=$with_pc_sysroot; pc_sysroot="$withval"
+else
+	pc_sysroot='/'
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $pc_sysroot" >&5
+$as_echo "$pc_sysroot" >&6; }
+
+# Check whether --with-pc_instdir was given.
+if test "${with_pc_instdir+set}" = set; then :
+  withval=$with_pc_instdir; pc_instdir="$withval"
+else
+	pc_instdir='/'
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $pc_instdir" >&5
+$as_echo "$pc_instdir" >&6; }
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for system include path to avoid -I flags" >&5
 $as_echo_n "checking for system include path to avoid -I flags... " >&6; }
diff -rup a/main.c b/main.c
--- a/main.c	2013-01-22 14:11:53.000000000 +0100
+++ b/main.c	2016-04-20 16:29:01.743105670 +0200
@@ -36,7 +36,10 @@
 #endif
 
 char *pcsysrootdir = NULL;
+char *pcinstdir = NULL;
 char *pkg_config_pc_path = NULL;
+char *pkg_config_instdir = NULL;
+char *pkg_config_sysroot = NULL;
 
 static gboolean want_my_version = FALSE;
 static gboolean want_version = FALSE;
@@ -308,10 +311,21 @@ init_pc_path (void)
   g_free (lpath);
   g_free (shpath);
 #else
+  pkg_config_instdir = PKG_CONFIG_PC_INSTDIR;
   pkg_config_pc_path = PKG_CONFIG_PC_PATH;
 #endif
 }
 
+static void
+init_sysroot (void)
+{
+#ifdef G_OS_WIN32
+  pkg_config_sysroot= "/";
+#else
+  pkg_config_sysroot = PKG_CONFIG_PC_SYSROOT;
+#endif
+}
+
 static gboolean
 process_package_args (const char *cmdline, GList **packages, FILE *log)
 {
@@ -507,6 +521,12 @@ main (int argc, char **argv)
       exit (1);
     }
 
+  pcinstdir = getenv ("PKG_CONFIG_INSTALL_DIR");
+  if (pcinstdir == NULL)
+      pcinstdir = pkg_config_instdir;
+
+  define_global_variable ("pc_instdir", pcinstdir);
+
   search_path = getenv ("PKG_CONFIG_PATH");
   if (search_path) 
     {
@@ -521,16 +541,23 @@ main (int argc, char **argv)
       add_search_dirs(pkg_config_pc_path, G_SEARCHPATH_SEPARATOR_S);
     }
 
-  pcsysrootdir = getenv ("PKG_CONFIG_SYSROOT_DIR");
-  if (pcsysrootdir)
+  /* Get the built-in sysroot path */
+  init_sysroot ();
+  if (pkg_config_sysroot == NULL)
     {
-      define_global_variable ("pc_sysrootdir", pcsysrootdir);
-    }
-  else
-    {
-      define_global_variable ("pc_sysrootdir", "/");
+      /* Even when we override the built-in search path, we still use it later
+       * to add pc_sysroot to the virtual pkg-config package.
+       */
+      verbose_error ("Failed to get default sysroot path\n");
+      exit (1);
     }
 
+  pcsysrootdir = getenv ("PKG_CONFIG_SYSROOT_DIR");
+  if (pcsysrootdir == NULL)
+      pcsysrootdir = pkg_config_sysroot;
+
+  define_global_variable ("pc_sysrootdir", pcsysrootdir);
+
   pcbuilddir = getenv ("PKG_CONFIG_TOP_BUILD_DIR");
   if (pcbuilddir)
     {
diff -rup a/Makefile.in b/Makefile.in
--- a/Makefile.in	2013-01-23 20:07:43.000000000 +0100
+++ b/Makefile.in	2016-04-20 16:11:55.943838974 +0200
@@ -321,6 +321,8 @@ mandir = @mandir@
 mkdir_p = @mkdir_p@
 oldincludedir = @oldincludedir@
 pc_path = @pc_path@
+pc_sysroot = @pc_sysroot@
+pc_instdir = @pc_instdir@
 pdfdir = @pdfdir@
 prefix = @prefix@
 program_transform_name = @program_transform_name@
@@ -346,6 +348,8 @@ SUBDIRS = $(GLIB_SUBDIR) . check
 DIST_SUBDIRS = $(SUBDIRS)
 @NATIVE_WIN32_FALSE@AM_CPPFLAGS = \
 @NATIVE_WIN32_FALSE@	-DPKG_CONFIG_PC_PATH="\"$(pc_path)\"" \
+@NATIVE_WIN32_FALSE@	-DPKG_CONFIG_PC_SYSROOT="\"$(pc_sysroot)\"" \
+@NATIVE_WIN32_FALSE@	-DPKG_CONFIG_PC_INSTDIR="\"$(pc_instdir)\"" \
 @NATIVE_WIN32_FALSE@	-DPKG_CONFIG_SYSTEM_INCLUDE_PATH="\"$(system_include_path)\"" \
 @NATIVE_WIN32_FALSE@	-DPKG_CONFIG_SYSTEM_LIBRARY_PATH="\"$(system_library_path)\""
 
diff -rup a/parse.c b/parse.c
--- a/parse.c	2013-01-22 14:11:59.000000000 +0100
+++ b/parse.c	2016-04-20 17:07:25.708509509 +0200
@@ -645,7 +645,7 @@ static void _do_parse_libs (Package *pkg
             ++p;
 
           flag->type = LIBS_L;
-          flag->arg = g_strconcat (L_flag, p, lib_suffix, NULL);
+          flag->arg = g_strconcat (L_flag, pcinstdir, p, lib_suffix, NULL);
           pkg->libs = g_list_prepend (pkg->libs, flag);
 	}
       else if (strcmp("-framework",p) == 0 && i+1 < argc)
@@ -807,7 +807,7 @@ parse_cflags (Package *pkg, const char *
             ++p;
 
           flag->type = CFLAGS_I;
-          flag->arg = g_strconcat ("-I", p, NULL);
+          flag->arg = g_strconcat ("-I", pcinstdir, p, NULL);
           pkg->cflags = g_list_prepend (pkg->cflags, flag);
         }
       else if (strcmp("-idirafter", arg) == 0 && i+1 < argc)
diff -rup a/pkg.c b/pkg.c
--- a/pkg.c	2013-01-22 14:11:59.000000000 +0100
+++ b/pkg.c	2016-04-20 17:08:37.101776981 +0200
@@ -57,7 +57,7 @@ gboolean ignore_private_libs = TRUE;
 void
 add_search_dir (const char *path)
 {
-  search_dirs = g_list_append (search_dirs, g_strdup (path));
+  search_dirs = g_list_append (search_dirs, g_strconcat(pcinstdir, path, NULL));
 }
 
 void
@@ -963,7 +963,7 @@ packages_get_flags (GList *pkgs, FlagTyp
       cur = get_multi_merged (pkgs, CFLAGS_OTHER, FALSE, TRUE);
       debug_spew ("adding CFLAGS_OTHER string \"%s\"\n", cur);
       g_string_append (str, cur);
-      g_free (cur);
+      g_free(cur);
     }
   if (flags & CFLAGS_I)
     {
diff -rup a/pkg.h b/pkg.h
--- a/pkg.h	2013-01-22 14:11:59.000000000 +0100
+++ b/pkg.h	2016-04-20 16:24:41.611038715 +0200
@@ -127,11 +127,13 @@ void disable_requires_private(void);
 extern gboolean disable_uninstalled;
 
 extern char *pcsysrootdir;
+extern char *pcinstdir;
 
 /* pkg-config default search path. On Windows the current pkg-config install
  * directory is used. Otherwise, the build-time defined PKG_CONFIG_PC_PATH.
  */
 extern char *pkg_config_pc_path;
+extern char *pkg_config_sysroot;
 
 #ifdef G_OS_WIN32
 /* If TRUE, do not automatically define "prefix"  while
